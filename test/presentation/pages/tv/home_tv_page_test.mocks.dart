// Mocks generated by Mockito 5.3.0 from annotations
// in ditonton/test/presentation/pages/tv/home_tv_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:ui' as _i10;

import 'package:ditonton/common/state_enum.dart' as _i8;
import 'package:ditonton/domain/entities/tv/tv.dart' as _i7;
import 'package:ditonton/domain/usecases/tv/get_airing_today_tvs.dart' as _i2;
import 'package:ditonton/domain/usecases/tv/get_on_the_air_tvs.dart' as _i3;
import 'package:ditonton/domain/usecases/tv/get_popular_tvs.dart' as _i4;
import 'package:ditonton/domain/usecases/tv/get_top_rated_tvs.dart' as _i5;
import 'package:ditonton/presentation/provider/tv/tv_list_notifier.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetAiringTodayTVs_0 extends _i1.SmartFake
    implements _i2.GetAiringTodayTVs {
  _FakeGetAiringTodayTVs_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeGetOnTheAirTVs_1 extends _i1.SmartFake
    implements _i3.GetOnTheAirTVs {
  _FakeGetOnTheAirTVs_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeGetPopularTVs_2 extends _i1.SmartFake implements _i4.GetPopularTVs {
  _FakeGetPopularTVs_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeGetTopRatedTVs_3 extends _i1.SmartFake
    implements _i5.GetTopRatedTVs {
  _FakeGetTopRatedTVs_3(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [TVListNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVListNotifier extends _i1.Mock implements _i6.TVListNotifier {
  MockTVListNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetAiringTodayTVs get getAiringTodayTVs =>
      (super.noSuchMethod(Invocation.getter(#getAiringTodayTVs),
              returnValue: _FakeGetAiringTodayTVs_0(
                  this, Invocation.getter(#getAiringTodayTVs)))
          as _i2.GetAiringTodayTVs);
  @override
  _i3.GetOnTheAirTVs get getOnTheAirTVs => (super.noSuchMethod(
          Invocation.getter(#getOnTheAirTVs),
          returnValue:
              _FakeGetOnTheAirTVs_1(this, Invocation.getter(#getOnTheAirTVs)))
      as _i3.GetOnTheAirTVs);
  @override
  _i4.GetPopularTVs get getPopularTVs =>
      (super.noSuchMethod(Invocation.getter(#getPopularTVs),
              returnValue:
                  _FakeGetPopularTVs_2(this, Invocation.getter(#getPopularTVs)))
          as _i4.GetPopularTVs);
  @override
  _i5.GetTopRatedTVs get getTopRatedTVs => (super.noSuchMethod(
          Invocation.getter(#getTopRatedTVs),
          returnValue:
              _FakeGetTopRatedTVs_3(this, Invocation.getter(#getTopRatedTVs)))
      as _i5.GetTopRatedTVs);
  @override
  List<_i7.TV> get airingTodayTVs =>
      (super.noSuchMethod(Invocation.getter(#airingTodayTVs),
          returnValue: <_i7.TV>[]) as List<_i7.TV>);
  @override
  _i8.RequestState get airingTodayState =>
      (super.noSuchMethod(Invocation.getter(#airingTodayState),
          returnValue: _i8.RequestState.Empty) as _i8.RequestState);
  @override
  List<_i7.TV> get onTheAirTVs =>
      (super.noSuchMethod(Invocation.getter(#onTheAirTVs),
          returnValue: <_i7.TV>[]) as List<_i7.TV>);
  @override
  _i8.RequestState get onTheAirState =>
      (super.noSuchMethod(Invocation.getter(#onTheAirState),
          returnValue: _i8.RequestState.Empty) as _i8.RequestState);
  @override
  List<_i7.TV> get popularTVs => (super
          .noSuchMethod(Invocation.getter(#popularTVs), returnValue: <_i7.TV>[])
      as List<_i7.TV>);
  @override
  _i8.RequestState get popularTVsState =>
      (super.noSuchMethod(Invocation.getter(#popularTVsState),
          returnValue: _i8.RequestState.Empty) as _i8.RequestState);
  @override
  List<_i7.TV> get topRatedTVs =>
      (super.noSuchMethod(Invocation.getter(#topRatedTVs),
          returnValue: <_i7.TV>[]) as List<_i7.TV>);
  @override
  _i8.RequestState get topRatedTVsState =>
      (super.noSuchMethod(Invocation.getter(#topRatedTVsState),
          returnValue: _i8.RequestState.Empty) as _i8.RequestState);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i9.Future<void> fetchAiringTodayTVs() => (super.noSuchMethod(
      Invocation.method(#fetchAiringTodayTVs, []),
      returnValue: _i9.Future<void>.value(),
      returnValueForMissingStub: _i9.Future<void>.value()) as _i9.Future<void>);
  @override
  _i9.Future<void> fetchOnTheAirTVs() => (super.noSuchMethod(
      Invocation.method(#fetchOnTheAirTVs, []),
      returnValue: _i9.Future<void>.value(),
      returnValueForMissingStub: _i9.Future<void>.value()) as _i9.Future<void>);
  @override
  _i9.Future<void> fetchPopularTVs() => (super.noSuchMethod(
      Invocation.method(#fetchPopularTVs, []),
      returnValue: _i9.Future<void>.value(),
      returnValueForMissingStub: _i9.Future<void>.value()) as _i9.Future<void>);
  @override
  _i9.Future<void> fetchTopRatedTVs() => (super.noSuchMethod(
      Invocation.method(#fetchTopRatedTVs, []),
      returnValue: _i9.Future<void>.value(),
      returnValueForMissingStub: _i9.Future<void>.value()) as _i9.Future<void>);
  @override
  void addListener(_i10.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i10.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
